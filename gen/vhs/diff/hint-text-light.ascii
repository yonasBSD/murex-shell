



















































────────────────────────────────────────────────────────────────────────────────




















































────────────────────────────────────────────────────────────────────────────────




















































────────────────────────────────────────────────────────────────────────────────




















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────

















































────────────────────────────────────────────────────────────────────────────────






────────────────────────────────────────────────────────────────────────────────
»





────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints





────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
»




────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text




────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
»



────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
»



────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» git status
(../Cellar/git/2.51.0/bin/git) git - the stupid content tracker


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» git status
(../Cellar/git/2.51.0/bin/git) git - the stupid content tracker


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» git status
(../Cellar/git/2.51.0/bin/git) git - the stupid content tracker


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try {
(builtin) Handles non-zero exits inside a block of code


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try {
(builtin) Handles non-zero exits inside a block of code


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try { cat example
(/bin/cat) cat - concatenate and print files


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try { cat example
(/bin/cat) cat - concatenate and print files


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try { cat example | rg pattern }
(../Cellar/ripgrep/14.1.1/bin/rg) rg - recursively search the current directory for lines matching a patt
ern

────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try { cat example | rg pattern }
(../Cellar/ripgrep/14.1.1/bin/rg) rg - recursively search the current directory for lines matching a patt
ern

────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» try { cat example | rg pattern }
(../Cellar/ripgrep/14.1.1/bin/rg) rg - recursively search the current directory for lines matching a patt
ern

────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» cd ~/Documents
Change directory: /Users/laurencemorgan/Documents


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» cd ~/Documents
Change directory: /Users/laurencemorgan/Documents


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» cd ~/Documents
Change directory: /Users/laurencemorgan/Documents


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(bsdtar) tar - manipulate tape archives


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
Preserve pathnames. By default, absolute pathnames (those that begin with a / character) have the leading
 slash removed both when creating archives and extracting from them. Also, tar will refuse to extract arc
hive entries whose pathnames contain .. or whose target directory would be altered by a symlink. This o…
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
Preserve pathnames. By default, absolute pathnames (those that begin with a / character) have the leading
 slash removed both when creating archives and extracting from them. Also, tar will refuse to extract arc
hive entries whose pathnames contain .. or whose target directory would be altered by a symlink. This o…
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c, r, u, x modes only) Archive or extract POSIX.1e or NFSv4 ACLs. This is the reverse of --no-acls and t
he default behavior in c, r, and u modes (except on Mac OS X) or if tar is run in x mode as root. On Mac
OS X this option translates extended ACLs to NFSv4 ACLs. To store extended ACLs the --mac-metadata opti…
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c, r, u, x modes only) Archive or extract POSIX.1e or NFSv4 ACLs. This is the reverse of --no-acls and t
he default behavior in c, r, and u modes (except on Mac OS X) or if tar is run in x mode as root. On Mac
OS X this option translates extended ACLs to NFSv4 ACLs. To store extended ACLs the --mac-metadata opti…
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c mode only) Use the archive suffix to decide a set of the format and the compressions. As a simple exam
ple,
 --absolute-paths                   --acls                             --auto-compress
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c mode only) Use the archive suffix to decide a set of the format and the compressions. As a simple exam
ple,
 --absolute-paths                   --acls                             --auto-compress
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c mode only) Compress the resulting archive with bzip2(1). In extract or list modes, this option is igno
red. Note that this tar implementation recognizes bzip2 compression automatically when reading archives.
 --absolute-paths                   --acls                             --auto-compress
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c mode only) Compress the resulting archive with bzip2(1). In extract or list modes, this option is igno
red. Note that this tar implementation recognizes bzip2 compression automatically when reading archives.
 --absolute-paths                   --acls                             --auto-compress
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» tar
(c mode only) Compress the resulting archive with bzip2(1). In extract or list modes, this option is igno
red. Note that this tar implementation recognizes bzip2 compression automatically when reading archives.
 --absolute-paths                   --acls                             --auto-compress
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too



────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
»


────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
(builtin) Murex's package manager

────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
» # The status bar below provides dynamic command line hints
» # We call it: Hint Text
» # You can also add custom text too
» murex-package install https://github.com/orefalo/murex-module-starship.git
* Getting package from 'https://github.com/orefalo/murex-module-starship.git'....
Cloning into '/Users/laurencemorgan/.murex_modules/murex-module-starship'...
────────────────────────────────────────────────────────────────────────────────
