- DocumentID: while
  Title: >+
    Loop While: `while`
  CategoryID: commands
  SubCategoryIDs:
    - commands.lang
    - commands.loop
  Summary: >-
    Loop until condition false
  Description: |-
    `while` loops until loops until **condition** is false.

    Normally the **conditional** and executed code block are 2 separate parameters
    however you can call `while` with just 1 parameter where the code block acts
    as both the conditional and the code to be ran.
  Usage: |-
    ### Until true

    ```
    while { condition } { code-block } -> <stdout>
  
    while { code-block } -> <stdout>
    ```

    ### Until false

    ```
    !while { condition } { code-block } -> <stdout>
  
    !while { code-block } -> <stdout>
    ```
  Examples: |-
    ### With conditional block

    `while` **$i** is less then **5**

    ```
    » i=0; while { $i<5 } { i=$i+1; out $i }
    1
    2
    3
    4
    5
    ```

    ### Without conditional block

    ```
    » i=0; while { i=$i+1; $i<5; out }
    true
    true
    true
    true
    false
    ```

    ### Until false

    `while` **$i** is _NOT_ greater than or equal to **5**

    ```
    » i=0; !while { $i >= 5 } { $i += 1; out $i }
    1
    2
    3
    4
    5
    ```
  Flags:
  Detail: |-
    {{ include "gen/includes/meta-values.inc.md" }}

    * `i`: iteration number
  Synonyms:
    - while
    - "!while"
  Related:
    - formap
    - foreach
    - for
    - let
    - set
    - global
    - out
    - err
