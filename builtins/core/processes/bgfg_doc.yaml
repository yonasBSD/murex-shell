- DocumentID: bg
  Title: >+
    Background Process: `bg`
  CategoryID: commands
  SubCategoryIDs:
    - commands.proc
  Summary: >-
    Run processes in the background
  Description: |-
    `bg` supports two modes: it can either be run as a function block which will
    execute in the background, or it can take stopped processes and daemonize
    them.
  Usage: |-
    POSIX only:

     ```
     bg { code block }

     bg fid
     ```
  Examples: |-

    ```
    bg { sleep 5; out "Morning" }
    ```

  Flags:
  Detail: |-
    The examples above will work on any system (Windows included). However the
    `ctrl+z` usage of backgrounding a stopped process (like Bash) is only
    supported on POSIX systems due to the limitation of required signals on
    non-platforms. This means the usage described in the examples is cross
    cross platform while `bg int` currently does not work on Windows nor Plan 9.
  Synonyms:
    - bg
  Related:
    - fid-list
    - fid-kill
    - fid-killall
    - fg
    - jobs
    - exec



- DocumentID: fg
  Title: >+
    Foreground Process: `fg`
  CategoryID: commands
  SubCategoryIDs:
    - commands.proc
  Summary: >-
    Sends a background process into the foreground
  Description: |-
    `fg` resumes a stopped process and sends it into the foreground.
  Usage: |-
    POSIX only:

    ```
    fg fid
    ```
  Examples:
  Flags:
  Detail: |-
    This builtin is only supported on POSIX systems. There is no support planned
    for Windows (due to the kernel not supporting the right signals) nor Plan 9.
  Synonyms:
    - fg
  Related:
    - fid-list
    - fid-kill
    - fid-killall
    - bg
    - jobs
    - exec
